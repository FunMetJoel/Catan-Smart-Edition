Timer unit: 1e-07 s

Total time: 166.093 s
File: c:\Users\Informatica\Documents\GitHub\Catan-Smart-Edition\CatanServer\src\firstNN.py
Function: make_move at line 89

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    89                                               @line_profiler.profile
    90                                               def make_move(self, game_state):
    91     24585  122113994.0   4967.0      7.4          hexes, players = self.interpret_state(game_state)
    92                                                   
    93     24585     601459.0     24.5      0.0          hexes = hexes.to(device)
    94     24585     119738.0      4.9      0.0          players = players.to(device)
    95                                                   
    96     49170    5755766.0    117.1      0.3          with torch.no_grad():
    97     24585 1391764254.0  56610.3     83.8              actions, roads, settlements, tradefor, tradewidth = self.model(hexes, players)
    98                                                       
    99     24584    3432370.0    139.6      0.2          actions = actions.numpy()
   100     24584     415573.0     16.9      0.0          roads = roads.numpy()
   101     24584     400175.0     16.3      0.0          settlements = settlements.numpy()
   102     24584     378382.0     15.4      0.0          tradefor = tradefor.numpy()
   103     24584     377322.0     15.3      0.0          tradewidth = tradewidth.numpy()
   104                                                   
   105     24584  118345632.0   4813.9      7.1          actionMask = game_state.getActionMask()
   106                                                   
   107    147504     454541.0      3.1      0.0          for i in range(len(actions)):
   108    122920    2407031.0     19.6      0.1              if actionMask[i] == 0:
   109     88300     432677.0      4.9      0.0                  actions[i] = 0
   110                                                   
   111     24584    3131003.0    127.4      0.2          actions = np.argmax(actions)
   112     24584      68234.0      2.8      0.0          if actions == 0:
   113     18511    7053548.0    381.0      0.4              game_state.endTurn()
   114                                                       # print("End turn")
   115      6073      16718.0      2.8      0.0          elif actions == 1:
   116      1532    2010672.0   1312.4      0.1              roadMask = game_state.getEdgeMask()
   117      1532      64825.0     42.3      0.0              roads = roads * roadMask
   118      1532      49092.0     32.0      0.0              road = np.argmax(roads)
   119      1532      81743.0     53.4      0.0              game_state.buildRoad(road)
   120                                                       # print("Build road")
   121      4541      14874.0      3.3      0.0          elif actions == 2:
   122        51      72519.0   1421.9      0.0              settlementMask = game_state.getCornerMask()
   123        51       2081.0     40.8      0.0              settlements = settlements * settlementMask
   124        51       1602.0     31.4      0.0              settlement = np.argmax(settlements)
   125        51       3442.0     67.5      0.0              game_state.buildSettlement(settlement)
   126        51     191483.0   3754.6      0.0              print("Build settlement (+1) at", settlement)
   127      4490      14348.0      3.2      0.0          elif actions == 3:
   128        62      84757.0   1367.0      0.0              cityMask = game_state.getCornerMask()
   129        62       2602.0     42.0      0.0              settlements = settlements * cityMask
   130        62       1999.0     32.2      0.0              city = np.argmax(settlements)
   131        62       3387.0     54.6      0.0              game_state.buildCity(city)
   132        62     250353.0   4038.0      0.0              print("Build city (+2) at", city)
   133      4428       9431.0      2.1      0.0          elif actions == 4:
   134      4428     126366.0     28.5      0.0              tradeFor = np.argmax(tradefor)
   135      4428     188580.0     42.6      0.0              tradewidthMask = game_state.getTradeWithBankMask()
   136      4428     180320.0     40.7      0.0              tradewidth = tradewidth * tradewidthMask
   137      4428     112417.0     25.4      0.0              tradeWith = np.argmax(tradewidth)
   138      4428     196743.0     44.4      0.0              game_state.tradeWithBank(tradeWith, tradeFor)
   139                                                       
   140                                                       # print("Trade", tradeFor, "for 4x", tradeWith)

166.09 seconds - c:\Users\Informatica\Documents\GitHub\Catan-Smart-Edition\CatanServer\src\firstNN.py:89 - make_move
